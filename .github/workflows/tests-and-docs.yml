name: Unit tests and project documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  docs:
    name: "Run tests and generate project documentation"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest, windows-latest]
        python-version: [ '3.11' ]
        # TODO: add rust-version 1.62
        # exclude:
        #   - os: macos-latest
        #     python-version: '3.8'
        #   - os: windows-latest
        #     python-version: '3.6'
    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        #architecture: x64
    - name: Display Python version
      run: |
        python -c "import sys; print(sys.version)"
    # - name: Set up Rust
    #   uses: actions-rs/toolchain@v1
    #   with:
    #     toolchain: stable
    # - name: Display Rust version
    #   run: |
    #     rustc --version
    # - name: Setup JDK
    #   uses: actions/setup-java@v3
    #   with:
    #     distribution: temurin
    #     java-version: 11
    # Install dependencies
    # - name: System-wide deps
    #   run: |
    #     sudo apt-get install -y ???

    # Install packages (for API doc gen)
    - name: Install library (Python)
      working-directory: .
      run: |
        pip install ".[all]"

    # docs (API)
    # generate python docs using pdoc
    - name: "Create documentation for Python components (API docs)"
      run: |
        pdoc --html -c latex_math=True --force --output-dir docs/api/python pti.fastapi
  
    # test & code coverage (Python)
    # - name: "Unit tests and code coverage reports for Python components"
    #   run: |
    #     API_KEYS=TEST_MODE  pytest -vvv

    # docs (other)
    # - name: "Create documentation (other)"
    #   run: |
    #     mkdocs build -c
    # - name: Deploy docs
    #   if: github.ref == 'refs/heads/main'
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     # see https://docs.github.com/en/free-pro-team@latest/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./site
    #     destination_dir: "docs"
    #     user_name: 'github-actions[bot]'
    #     user_email: 'github-actions[bot]@users.noreply.github.com'
    #     commit_message: ${{ github.event.head_commit.message }}
